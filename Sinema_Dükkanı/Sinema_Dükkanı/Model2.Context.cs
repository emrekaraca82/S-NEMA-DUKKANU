//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sinema_Dükkanı
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class sinema_dükkanıEntities1 : DbContext
    {
        public sinema_dükkanıEntities1()
            : base("name=sinema_dükkanıEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<filmler> filmlers { get; set; }
        public virtual DbSet<müsteriler> müsteriler { get; set; }
        public virtual DbSet<oyuncular> oyunculars { get; set; }
        public virtual DbSet<satıslar> satıslar { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<türler> türler { get; set; }
        public virtual DbSet<yöntemenler> yöntemenler { get; set; }
    
        public virtual int oyuncuekle(string adısoyadı, Nullable<System.DateTime> dogumtarihi, string memleket)
        {
            var adısoyadıParameter = adısoyadı != null ?
                new ObjectParameter("adısoyadı", adısoyadı) :
                new ObjectParameter("adısoyadı", typeof(string));
    
            var dogumtarihiParameter = dogumtarihi.HasValue ?
                new ObjectParameter("dogumtarihi", dogumtarihi) :
                new ObjectParameter("dogumtarihi", typeof(System.DateTime));
    
            var memleketParameter = memleket != null ?
                new ObjectParameter("memleket", memleket) :
                new ObjectParameter("memleket", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("oyuncuekle", adısoyadıParameter, dogumtarihiParameter, memleketParameter);
        }
    
        public virtual int oyuncugüncelle(Nullable<int> no, string adısoyadı, Nullable<System.DateTime> dogumtarihi, string memleket)
        {
            var noParameter = no.HasValue ?
                new ObjectParameter("no", no) :
                new ObjectParameter("no", typeof(int));
    
            var adısoyadıParameter = adısoyadı != null ?
                new ObjectParameter("adısoyadı", adısoyadı) :
                new ObjectParameter("adısoyadı", typeof(string));
    
            var dogumtarihiParameter = dogumtarihi.HasValue ?
                new ObjectParameter("dogumtarihi", dogumtarihi) :
                new ObjectParameter("dogumtarihi", typeof(System.DateTime));
    
            var memleketParameter = memleket != null ?
                new ObjectParameter("memleket", memleket) :
                new ObjectParameter("memleket", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("oyuncugüncelle", noParameter, adısoyadıParameter, dogumtarihiParameter, memleketParameter);
        }
    
        public virtual int oyuncusil(Nullable<int> no)
        {
            var noParameter = no.HasValue ?
                new ObjectParameter("no", no) :
                new ObjectParameter("no", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("oyuncusil", noParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int türekle(string türad)
        {
            var türadParameter = türad != null ?
                new ObjectParameter("türad", türad) :
                new ObjectParameter("türad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("türekle", türadParameter);
        }
    
        public virtual int türsil(Nullable<int> türid)
        {
            var türidParameter = türid.HasValue ?
                new ObjectParameter("türid", türid) :
                new ObjectParameter("türid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("türsil", türidParameter);
        }
    }
}
